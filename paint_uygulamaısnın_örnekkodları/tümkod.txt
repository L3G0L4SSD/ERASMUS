using System;
using System.Drawing;
using System.Windows.Forms;

namespace SimplePaint
{
    public partial class Form1 : Form
    {
        private bool drawing;
        private int x, y;
        private Graphics g;
        private Pen pen;
        private string shape;

        public Form1()
        {
            InitializeComponent();
            drawing = false;
            pen = new Pen(Color.Black, 2);
            cmbPenSize.SelectedIndex = 0; // Default olarak ilk öğeyi seç.
            cmbPenSize.SelectedIndexChanged += cmbPenSize_SelectedIndexChanged;
            cmbShape.SelectedIndex = 0; // Default olarak ilk öğeyi seç.
            cmbShape.SelectedIndexChanged += cmbShape_SelectedIndexChanged;
            shape = "Free Draw";
        }

        private void panel1_MouseDown(object sender, MouseEventArgs e)
        {
            drawing = true;
            x = e.X;
            y = e.Y;
        }

        private void panel1_MouseMove(object sender, MouseEventArgs e)
        {
            if (drawing && shape == "Free Draw")
            {
                g = panel1.CreateGraphics();
                g.DrawLine(pen, new Point(x, y), e.Location);
                x = e.X;
                y = e.Y;
            }
        }

        private void panel1_MouseUp(object sender, MouseEventArgs e)
        {
            if (drawing)
            {
                g = panel1.CreateGraphics();
                if (shape == "Rectangle")
                {
                    int width = Math.Abs(x - e.X);
                    int height = Math.Abs(y - e.Y);
                    int left = Math.Min(x, e.X);
                    int top = Math.Min(y, e.Y);
                    g.DrawRectangle(pen, left, top, width, height);
                }
                else if (shape == "Ellipse")
                {
                    int width = Math.Abs(x - e.X);
                    int height = Math.Abs(y - e.Y);
                    int left = Math.Min(x, e.X);
                    int top = Math.Min(y, e.Y);
                    g.DrawEllipse(pen, left, top, width, height);
                }
                drawing = false;
            }
        }

        private void btnColor_Click(object sender, EventArgs e)
        {
            if (colorDialog.ShowDialog() == DialogResult.OK)
            {
                pen.Color = colorDialog.Color;
            }
        }

        private void btnEraser_Click(object sender, EventArgs e)
        {
            pen.Color = panel1.BackColor;
        }

        private void cmbPenSize_SelectedIndexChanged(object sender, EventArgs e)
        {
            int size;
            if (int.TryParse(cmbPenSize.SelectedItem.ToString(), out size))
            {
                pen.Width = size;
            }
        }

        private void cmbShape_SelectedIndexChanged(object sender, EventArgs e)
        {
            shape = cmbShape.SelectedItem.ToString();
        }

        private void btnClear_Click(object sender, EventArgs e)
        {
            panel1.Invalidate(); // Paneli temizler.
        }
    }
}
