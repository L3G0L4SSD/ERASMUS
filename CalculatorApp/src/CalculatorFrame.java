
import javax.swing.JButton;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sinan
 */
public class CalculatorFrame extends javax.swing.JFrame {

    /**
     * Creates new form CalculatorFrame
     */
    public CalculatorFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton0 = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonSubstract = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButtonDivide = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jTextFieldDisplay = new javax.swing.JTextField();
        jButtonEquals = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("5");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("6");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("7");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setText("9");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton0.setText("0");
        jButton0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton0ActionPerformed(evt);
            }
        });

        jButtonAdd.setText("+");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonSubstract.setText("-");
        jButtonSubstract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubstractActionPerformed(evt);
            }
        });

        jButtonMultiply.setText("*");
        jButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplyActionPerformed(evt);
            }
        });

        jButtonDivide.setText("/");
        jButtonDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivideActionPerformed(evt);
            }
        });

        jButtonClear.setText("clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jButtonEquals.setText("equal");
        jButtonEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEqualsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jButtonClear)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonAdd)
                            .addComponent(jButtonSubstract)
                            .addComponent(jButtonMultiply)
                            .addComponent(jButtonDivide))
                        .addContainerGap(171, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jButtonEquals)
                        .addGap(129, 129, 129))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jTextFieldDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonEquals)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButtonAdd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButtonSubstract))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jButton9)
                    .addComponent(jButtonMultiply))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton0)
                    .addComponent(jButtonDivide)
                    .addComponent(jButtonClear))
                .addGap(79, 79, 79))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa veya son karakter bir işlem işareti değilse, "+" işaretini ekrana ekleyin.
    if(jTextFieldDisplay.getText().isEmpty() || !isOperator(jTextFieldDisplay.getText().charAt(jTextFieldDisplay.getText().length() - 1))) {
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButtonAddActionPerformed
private boolean isOperator(char c) {
    return c == '+' || c == '-' || c == '*' || c == '/';
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
       jTextFieldDisplay.setText("0");
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jButtonEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEqualsActionPerformed
       try {
    // İfadeyi değerlendirerek sonucu al
    String expression = jTextFieldDisplay.getText();
    double result = evaluateExpression(expression);
    
    // Sonucu ekrana yaz
    jTextFieldDisplay.setText(String.valueOf(result));
} catch (Exception e) {
    // Hata oluştuysa ekrana hata mesajını yaz
    jTextFieldDisplay.setText("Hata: " + e.getMessage());
}
    }//GEN-LAST:event_jButtonEqualsActionPerformed

    private void jButton0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton0ActionPerformed
      String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton0ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
       String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
     String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa ve kullanıcı rakam tuşlarına basarsa, ekranı sıfırlamak yerine rakamı direkt ekrana yazdırıyoruz.
    if(jTextFieldDisplay.getText().equals("0") && Character.isDigit(buttonValue.charAt(0))) {
        jTextFieldDisplay.setText(buttonValue);
    } else {
        // Eğer ekran doluysa ve kullanıcı rakam tuşlarına basarsa, rakamı ekranın sonuna ekliyoruz.
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButtonSubstractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubstractActionPerformed
       String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa veya son karakter bir işlem işareti değilse, "-" işaretini ekrana ekleyin.
    if(jTextFieldDisplay.getText().isEmpty() || !isOperator(jTextFieldDisplay.getText().charAt(jTextFieldDisplay.getText().length() - 1))) {
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButtonSubstractActionPerformed

    private void jButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplyActionPerformed
       String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa veya son karakter bir işlem işareti değilse, "*" işaretini ekrana ekleyin.
    if(jTextFieldDisplay.getText().isEmpty() || !isOperator(jTextFieldDisplay.getText().charAt(jTextFieldDisplay.getText().length() - 1))) {
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButtonMultiplyActionPerformed
private double evaluateExpression(String expression) {
    // Boşlukları kaldırın
    expression = expression.replaceAll("\\s+", "");

    // İşlem sırasını korumak için öncelik sıralaması
    // * ve / işlemlerinin önceliği + ve - işlemlerinden daha yüksektir.
    // Ancak bu örnekte öncelik sırası göz ardı edilmiştir.

    // İfadeyi parçalara ayırma
    String[] parts = expression.split("(?<=[-+*/])|(?=[-+*/])");

    // Sonucu tutacak değişken
    double result = Double.parseDouble(parts[0]);

    // İşlemi gerçekleştirme
    for (int i = 1; i < parts.length; i += 2) {
        String operator = parts[i];
        double operand = Double.parseDouble(parts[i + 1]);
        switch (operator) {
            case "+":
                result += operand;
                break;
            case "-":
                result -= operand;
                break;
            case "*":
                result *= operand;
                break;
            case "/":
                if (operand == 0) {
                    throw new ArithmeticException("Bölme sıfıra bölünemez!");
                }
                result /= operand;
                break;
            default:
                throw new IllegalArgumentException("Geçersiz işlem: " + operator);
        }
    }

    // Sonucu döndür
    return result;
}

    private void jButtonDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivideActionPerformed
       String buttonValue = ((JButton)evt.getSource()).getText();
    
    // Eğer ekran boşsa veya son karakter bir işlem işareti değilse, "/" işaretini ekrana ekleyin.
    if(jTextFieldDisplay.getText().isEmpty() || !isOperator(jTextFieldDisplay.getText().charAt(jTextFieldDisplay.getText().length() - 1))) {
        jTextFieldDisplay.setText(jTextFieldDisplay.getText() + buttonValue);
    }
    }//GEN-LAST:event_jButtonDivideActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton0;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDivide;
    private javax.swing.JButton jButtonEquals;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonSubstract;
    private javax.swing.JTextField jTextFieldDisplay;
    // End of variables declaration//GEN-END:variables

   
}
